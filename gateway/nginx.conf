worker_processes 1;

events {
    worker_connections 1024;
}

http {

    map $http_origin $cors_origin {
      default "";
      "http://localhost:3000" "http://localhost:3000";
      "http://192.168.56.1:3000" "http://192.168.56.1:3000";
   }


    server {
        listen 8080;

        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

   
        if ($request_method = OPTIONS) {
            return 204;
        }

        location /auth/ {
            proxy_pass http://auth-service:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_pass_request_headers on;
            proxy_cookie_path / "/; HttpOnly"; 
            proxy_cookie_domain ~^(.+)$ $1; 
        }

        location /users/ {
            proxy_pass http://user-service:8002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_pass_request_headers on;
            proxy_cookie_path / "/; HttpOnly";
            proxy_cookie_domain ~^(.+)$ $1;

            error_page 401 = @unauthorized_json;
        }


        location /chat-ws/ {
            proxy_pass http://websocket-gateway-service:8003/; 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }



        location @unauthorized_json {
            add_header Content-Type application/json;
            return 401 '{"statusCode": 401, "message": "Unauthorized"}';
        }
    }
}